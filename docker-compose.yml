# Execute command -> docker-compose up -d
# Parameters needed here are in ".env" file (needs to be in the same directory!)

version: "3"

services:
  web_server:
    depends_on:
      - api
      - spa
    restart: always
    image: engenharia-server
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      #   - spa-files:/usr/src/app
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - engenharia-network

  database:
    image: mysql:5.7
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "${HOST_MYSQL_PORT}:${CONTAINER_MYSQL_PORT}"
    environment:
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    restart: always
    networks:
      - engenharia-network

  api:
    depends_on:
      - database
    image: engenharia-api
    restart: always
    build:
      context: ./api
    ports:
      - "${API_PORT}:${CONTAINER_API_PORT}"
    environment:
      MYSQL_URL: database
      MYSQL_PORT: "${CONTAINER_MYSQL_PORT}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    networks:
      - engenharia-network

  spa:
    depends_on:
      - api
    image: engenharia-spa
    build:
      context: ./spa
    ports:
      - "${HOST_SPA_PORT}:80"
    environment:
      API_URL: "http://${API_URL}"
      VIRTUAL_HOST: "${SPA_URL}"
      VIRTUAL_PORT: "80"
    # volumes:
    #   - spa-files:/usr/src/app/public
    networks:
      - engenharia-network

networks:
  engenharia-network:
    driver: bridge

volumes:
  dbdata:
  # spa-files:
